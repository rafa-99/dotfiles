#!/bin/sh

# Setting Vars
FILE=$(basename "$1")
EXTENSION=$(echo "$FILE" | awk -F . '{if (NF>1) {print $NF}}')
BASE=$(basename "$FILE" ."$EXTENSION")

# Filter to compile other types of files
if [ "$#" -eq 2 ] && { [ -e "$2/Makefile" ] || [ -e "$2/makefile" ]; }; then
	make
else
	case $EXTENSION in
	c|h)
		cc -o "$BASE" ./*.c
		;;
	cpp)
		c++ -o "$BASE" ./*.cpp
		;;
	java)
		javac "$FILE" ./*.java
		;;
	md|rmd)
		FORMAT=$(printf "PDF\nHTML\nBeamer\nODT\nDOCX\nPPTX\n" | dmenu -i -p "Format:")
		case "$FORMAT" in
			PDF)
				pandoc "$FILE" --to latex --from markdown+autolink_bare_uris+tex_math_single_backslash \
					--output "$BASE".pdf --self-contained --highlight-style tango --pdf-engine xelatex \
					--variable graphics --variable 'geometry:margin=1in' -V 'mathfont:Symbola'
				;;
			HTML)
				pandoc "$FILE" --to html --output "$BASE".html
				;;
			Beamer)
				pandoc "$FILE" --to beamer --from markdown+autolink_bare_uris+tex_math_single_backslash --output "$BASE".pdf \
					--highlight-style tango --pdf-engine pdflatex --self-contained
				;;
			ODT)
				pandoc "$FILE" --to odt --from markdown+autolink_bare_uris+tex_math_single_backslash --output "$BASE".odt
				;;
			DOCX)
				pandoc "$FILE" --to docx --from markdown+autolink_bare_uris+tex_math_single_backslash --output "$BASE".docx \
					--highlight-style tango
				;;
			PPTX)
				pandoc "$FILE" --to pptx --from markdown+autolink_bare_uris+tex_math_single_backslash --output "$BASE".pptx
		esac
		;;
	ms)
		groff -k -T pdf -m -ms "$FILE" > "$BASE.pdf"
		;;
	tex)
		pdflatex "$FILE"
	esac
fi
