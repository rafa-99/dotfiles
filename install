#!/bin/sh

#
# Distro dots install list
#

arch(){
	echo "######################"
	echo "# dotfiles Installer #"
	echo "######################"
	echo "|   for Arch Linux   |"
	echo "**********************"

	# Installing opendoas
	sudo pacman -Syu --needed opendoas
	# Updated doas permissions
	sudo cp -rf ".local/etc/doas.conf" "/etc/"
	doas cp -rf ".local/etc/hosts" "/etc/"
	# Installing Deps
	doas pacman -Rns vim
	doas pacman --needed -Syu screenfetch zsh zsh-syntax-highlighting youtube-dl engrampa nmap base-devel ncmpcpp nitrogen xclip newsboat vifm zathura tk libpng libjpeg-turbo webkit2gtk gtk2 gtk3 gtkmm gtkmm3 wxgtk-common wxgtk3 grc gst-libav gst-plugins-good scrot ntfs-3g ffmpeg acpi texlive-most pcmanfm lxappearance arc-gtk-theme papirus-icon-theme ntp vsftpd filezilla redshift numlockx catimg htop xclip ntfs-3g acpi imagemagick transmission-gtk neovim vifm ncmpcpp mpv mpd mpc sxiv zathura zathura-cb zathura-djvu zathura-pdf-mupdf zathura-ps python-pywal irssi r tk pandoc-citeproc firefox python python-pip python2 python2-pip ccache automake lzop bison gperf zip curl python-networkx squashfs-tools libxml2 pngcrush schedtool make bc android-tools jdk8-openjdk java8-openjfx gimp audacity kdenlive frei0r-plugins breeze-icons vlc inkscape unzip unarchiver arandr shellcheck arc-gtk-theme curl linux-firmware lutris playonlinux geany steam ctags unoconv picom
	# Install Computer Science Programs
	printf "Do yo want to install Computer Science Programs? [Y/n]" && read -r CS
	if [ "$CS" = "Y" ] || [ "$CS" = "y" ]; then
		doas pacman --needed --noconfirm -S jdk11-openjdk java11-openjfx intellij-idea-community-edition && clear
	fi
}

gentoo(){
echo "######################"
echo "# dotfiles Installer #"
echo "######################"
echo "|  for Gentoo Linux  |"
echo "**********************"

# Adding to audio group
usermod -aG audio "$(whoami)"
}

base(){
	# Setting Vars
	CURDIR=$(pwd)

	#Preparing Dirs and Files for dotfiles
	cp -rf .config "$HOME"
	cp -rf .local "$HOME"
	cp -rf .xinitrc "$HOME"
	cp -rf .xprofile "$HOME"
	cp -rf .zprofile "$HOME"
	mkdir -p ~/Mount
	mkdir -p ~/Mount/Drive
	mkdir -p ~/Mount/Drive2
	mkdir -p ~/Mount/Drive3
	mkdir -p ~/Mount/MTP
	mkdir -p ~/Mount/USB
	mkdir -p ~/Mount/USB2
	mkdir -p ~/Mount/USB3
	mkdir -p ~/Documents/PDF
	mkdir -p ~/Documents/Markdown
	mkdir -p ~/Documents/Groff
	mkdir -p ~/Documents/Java
	mkdir -p ~/Documents/Disks
	mkdir -p ~/Documents/Archives
	mkdir -p ~/Documents/Word
	mkdir -p ~/Documents/Powerpoint
	mkdir -p ~/Documents/Excel
	mkdir -p ~/Repositories
	mkdir -p ~/Pictures/Screenshots
	mkdir -p ~/Pictures/GIMP
	mkdir -p ~/Videos/Recordings

	### Install of Suckless tools
	mkdir suck
	cd suck && git clone https://gitlab.com/rafa_99/dwm && \
		git clone https://gitlab.com/rafa_99/dmenu && \
		git clone https://gitlab.com/rafa_99/st && \
		git clone https://gitlab.com/rafa_99/surf && \
		git clone https://gitlab.com/rafa_99/tabbed && \
		git clone https://gitlab.com/rafa_99/farbfeld && \
		git clone https://gitlab.com/rafa_99/sent && \
		git clone https://gitlab.com/rafa_99/slock
	cd "$CURDIR"/suck/dwm && doas make clean install
	cd "$CURDIR"/suck/dmenu && doas make clean install
	cd "$CURDIR"/suck/st && doas make clean install
	cd "$CURDIR"/suck/surf && doas make clean install
	cd "$CURDIR"/suck/tabbed && doas make clean install
	cd "$CURDIR"/suck/farbfeld && doas make clean install
	cd "$CURDIR"/suck/sent && doas make clean install
	cd "$CURDIR"/suck/slock && doas make clean install
	cd "$CURDIR" && doas rm -rf suck/
	
	# Fixing Java Programs on Window Managers
	doas sh -c 'echo "export _JAVA_AWT_WM_NONREPARENTING=1" >>/etc/profile.d/jre.sh'

	# Changing default shell to zsh
	chsh -s /bin/zsh
	
	# Setting up Neovim
	## Linking Neovim to Vim
	ln -s /usr/bin/nvim ~/.local/bin/vim 
	
	## Installing Neovim Plugin Manager (Vim Plug)
	curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
	    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	
	## Installing Plugins
	nvim -c PlugInstall
	
	## Installing Spell Checker
	nvim -c setlocal spell spelllang=pt_pt
}

#
# Main Script
#

echo "Detecting Distro..."
DISTRO=$(grep ^ID= /etc/os-release | sed s:ID=::g)

case "$DISTRO" in
	arch)
		arch && base
		;;
	gentoo)
		gentoo && base
		;;
esac
