#!/bin/sh

####################################################################################################################
## This script will detect your your system distro and then automatically choose a package manager based on it ;) ##
##                                           DiStRo HoPpInG mAdE eAsIeR                                           ##
##                                              Written by: @rafa_99                                              ##
####################################################################################################################

# Extra Functions
distrovars()
{
	## Already in my environment, uncomment if you're not using my dotfiles
	## Checking current distro
	# DISTRO="$(grep ^ID= /etc/os-release | sed s:ID=::g | sed s:\"::g)"

	case "$DISTRO" in
		debian|ubuntu|linuxmint|void)
			RUN=sudo
			;;
		arch|artix|manjaro|parabola)
			if [ -f /usr/bin/yay ]; then
				RUN=yay
			elif [ -f /usr/bin/doas ]; then
				RUN="doas pacman"
			else
				RUN="sudo pacman"
			fi
			;;
		gentoo)
			RUN=doas
			;;
	esac
}
logo()
{
	echo "                                     "
	sleep 0.08
	echo "      :::::::::  :::    ::: :::::::: "
	sleep 0.07
	echo "     :+:    :+: :+:   :+: :+:    :+: "
	sleep 0.06
	echo "    +:+    +:+ +:+  +:+  +:+         "
	sleep 0.05
	echo "   +#++:++#+  +#++:++   :#:          "
	sleep 0.04
	echo "  +#+        +#+  +#+  +#+   +#+#    "
	sleep 0.03
	echo " #+#        #+#   #+# #+#    #+#     "
	sleep 0.02
	echo "###        ###    ### ########       "
	sleep 0.01
	echo "                                     "
}

# Base Functions
clean()
{
	case "$DISTRO" in
		arch|artix|manjaro|parabola)
			$RUN -Rns "$(pacman -Qtdq)" && $RUN -Scc
			;;
		debian|ubuntu|linuxmint)
			$RUN apt autoremove --purge && $RUN apt clean
			;;
		gentoo)
			$RUN emerge -caq
			;;
		void)
			$RUN xbps-remove -ROo
	esac
}

help()
{
	printf "clean   -> removes orphans and cleans the package cache\nhelp    -> display this message\ninstall -> install a selected package\nquery   -> lists available packages or a package to \nremove  -> remove a selected package\nsearch  -> look up for a package in the available repos\nupdate  -> updates repos and packages\n\n"
}

install()
{
	case "$DISTRO" in
		arch|artix|manjaro|parabola)
			$RUN -Sy "$PACKAGE"
			;;
		debian|ubuntu|linuxmint)
			$RUN apt install "$PACKAGE"
			;;
		gentoo)
			$RUN emerge -aq "$PACKAGE"
			;;
		void)
			$RUN xbps-install -S "$PACKAGE"
	esac
}

query()
{
	case "$DISTRO" in
		arch|artix|manjaro|parabola)
			pacman -Qs "$PACKAGE"
			;;
		debian|ubuntu|linuxmint)
			apt list --installed | grep "$PACKAGE"
			;;
		gentoo)
			emerge -s | grep "$PACKAGE"
			;;
		void)
			xbps-query -l | grep "$PACKAGE"
	esac
}

remove()
{
	case "$DISTRO" in
		arch|artix|manjaro|parabola)
			$RUN -Rns "$PACKAGE"
			;;
		debian|ubuntu|linuxmint)
			$RUN apt autoremove --purge "$PACKAGE"
			;;
		gentoo)
			$RUN emerge -caq "$PACKAGE"
			;;
		void)
			$RUN xbps-remove -R "$PACKAGE"
	esac
}

search()
{
	case "$DISTRO" in
		arch|artix|manjaro|parabola)
			pacman -Ss "$PACKAGE" | less
			;;
		debain)
			apt search "$PACKAGE" | less
			;;
		gentoo)
			emerge -s "$PACKAGE" | less
			;;
		void)
			xbps-query -Rs "$PACKAGE"
	esac
}

update()
{
	case "$DISTRO" in
		arch|artix|manjaro|parabola)
			$RUN -Syyuu
			;;
		debian|ubuntu|linuxmint)
			$RUN apt update && $RUN apt upgrade
			;;
		gentoo)
			if [ -f /usr/bin/layman ]; then
				$RUN layman -S &&$RUN emerge-webrsync && $RUN emerge -uaqDU --keep-going --with-bdeps=y --newuse @world
			else
				$RUN emerge-webrsync && $RUN emerge -uaqDU --keep-going --with-bdeps=y --newuse @world
			fi
			;;
		void)
			$RUN xbps-install -Su
	esac
}

#
# Main Function
#

logo
distrovars
PACKAGE="$2"

case "$1" in
	clean|c)
		clean
		;;
	help|h)
		help
		;;
	install|i)
		install
		;;
	query|q)
		query
		;;
	remove|r)
		remove
		;;
	search|s)
		search
		;;
	update|u)
		update
		;;
	*)
		printf "Command not found\n" && help
esac
